{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-28T00:04:10.177Z",
    "end": "2024-06-28T00:04:22.538Z",
    "duration": 12361,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8e23e26a-4c2f-4c73-b459-ca2aa6833bcd",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16f95c6b-984c-4997-bcc2-d6bb0a31f583",
          "title": "Browsing Filtering Test",
          "fullFile": "/Users/juanjose/juan/bootcamp/djms-front/test/browsing-test.spec.js",
          "file": "/test/browsing-test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should list products",
              "fullTitle": "Browsing Filtering Test should list products",
              "timedOut": false,
              "duration": 3156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver;\ntry {\n    \n    \n    driver = await new Builder().forBrowser('chrome').build();\n    await driver.get('http://localhost:3000/');\n    \n    \n  \n    await driver.wait(until.elementLocated(By.xpath('/html/body/div[2]/div/nav/div/div[1]/div[1]/div/a')), 10000);\n    let categoryInput = await driver.findElement(By.xpath('/html/body/div[2]/div/nav/div/div[1]/div[1]/div/a'));\n    \n    \n    \n    assert.equal(await categoryInput.getText(), 'DMajorStore')\n   \n    \n   \n}catch(error){\n    \n    throw error\n}finally{\n    await driver.quit();\n}",
              "err": {},
              "uuid": "1e331e9c-e829-483d-9abb-961cb335b7b9",
              "parentUUID": "16f95c6b-984c-4997-bcc2-d6bb0a31f583",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Product search",
              "fullTitle": "Browsing Filtering Test Product search",
              "timedOut": false,
              "duration": 2047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver;\ntry {\n    \n    \n    driver = await new Builder().forBrowser('chrome').build();\n    await driver.get('http://localhost:3000/');\n    \n    \n    await driver.wait(until.elementLocated(By.xpath('/html/body/div[2]/div/nav/div/div[1]/div[1]/div/a')), 10000);\n    let categoryInput = await driver.findElement(By.xpath('/html/body/div[2]/div/nav/div/div[1]/div[1]/div/a'));\n    \n    \n    \n    assert.equal(await categoryInput.getText(), 'DMajorStore')\n   \n}catch(error){\n    \n    throw error\n}finally{\n    await driver.quit();\n}",
              "err": {},
              "uuid": "6867d0e7-b3ef-4d07-b2b9-2459be0f531f",
              "parentUUID": "16f95c6b-984c-4997-bcc2-d6bb0a31f583",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should add product to cart",
              "fullTitle": "Browsing Filtering Test Should add product to cart",
              "timedOut": false,
              "duration": 2463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver;\ntry {\n    \n    \n    driver = await new Builder().forBrowser('chrome').build();\n    await driver.get('http://localhost:3000/');\n    \n    \n    await driver.wait(until.elementLocated(By.xpath(\"/html/body/div[2]/div/div/div[2]/div[2]/div/div[2]/div/div/div\")), 10000);\n    let categoryInput = await driver.findElement(By.xpath('/html/body/div[2]/div/div/div[2]/div[2]/div/div[2]/div/div/div'));\n    await categoryInput.click()\n    \n    await driver.wait(until.elementLocated(By.xpath('/html/body/div[2]/div/div/div/div/div[2]/div/div/div[3]/button[2]')), 10000);\n    let appleButton = await driver.findElement(By.xpath(\"/html/body/div[2]/div/div/div/div/div[2]/div/div/div[3]/button[2]\"))\n    assert.equal(await appleButton.getText(), 'AÃ±adir al carrito')\n    \n    \n\n    \n   \n}catch(error){\n    \n    throw error\n}finally{\n    await driver.quit();\n}",
              "err": {},
              "uuid": "0568677d-1261-40e3-b67d-694f88874557",
              "parentUUID": "16f95c6b-984c-4997-bcc2-d6bb0a31f583",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e331e9c-e829-483d-9abb-961cb335b7b9",
            "6867d0e7-b3ef-4d07-b2b9-2459be0f531f",
            "0568677d-1261-40e3-b67d-694f88874557"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7666,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "417e5f45-bf18-43f9-bea0-49a44504d006",
          "title": "Login Test",
          "fullFile": "/Users/juanjose/juan/bootcamp/djms-front/test/login-test.spec.js",
          "file": "/test/login-test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login with valid credentials",
              "fullTitle": "Login Test should login with valid credentials",
              "timedOut": false,
              "duration": 2993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver;\ntry {\n    \n    \n    \n    driver = await new Builder().forBrowser('chrome').build();\n    await driver.get('http://localhost:3000/auth/login');\n    \n    \n    await driver.wait(until.elementLocated(By.xpath('//*[@id=\"email\"]')), 10000);\n    let emailInput = await driver.findElement(By.xpath('//*[@id=\"email\"]'));\n    await emailInput.sendKeys('john.doe@example.com')\n    \n    let passwordInput = await driver.findElement(By.xpath('//*[@id=\"password\"]'))\n    await passwordInput.sendKeys('password123')\n    \n    let loginButton = await driver.findElement(By.xpath('/html/body/div[2]/div/div[2]/div/form/button[1]'))\n    await loginButton.click()\n   \n    \n    await driver.wait(until.urlIs('http://localhost:3000/'), 10000)\n    \n    \n    \n    let welcome = await driver.findElement(By.className(\"text-white text-2xl font-bold\"))\n    assert.equal(await welcome.getText(), 'DMajorStore')\n    console.log(\"Test passed\")\n}catch(error){\n    \n    throw error\n}finally{\n    await driver.quit();\n}",
              "err": {},
              "uuid": "b5749f47-59ef-45ce-8737-3b647cca0c3d",
              "parentUUID": "417e5f45-bf18-43f9-bea0-49a44504d006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not login with invalid credentials",
              "fullTitle": "Login Test should not login with invalid credentials",
              "timedOut": false,
              "duration": 1693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver;\ntry {\n    \n    \n    \n    driver = await new Builder().forBrowser('chrome').build();\n    await driver.get('http://localhost:3000/auth/login');\n    \n    \n    await driver.wait(until.elementLocated(By.xpath('//*[@id=\"email\"]')), 10000);\n    let emailInput = await driver.findElement(By.xpath('//*[@id=\"email\"]'));\n    await emailInput.sendKeys('jonh.doe@example.com')\n    \n    let passwordInput = await driver.findElement(By.xpath('//*[@id=\"password\"]'))\n    await passwordInput.sendKeys('password123')\n    \n    let loginButton = await driver.findElement(By.xpath('/html/body/div[2]/div/div[2]/div/form/button[1]'))\n    await loginButton.click()\n    \n    await driver.wait(until.elementLocated(By.xpath('/html/body/div[2]/div/div[2]/div/form/div[1]')), 10000);\n \n    \n    let welcome = await driver.findElement(By.xpath('/html/body/div[2]/div/div[2]/div/form/div[1]'))\n    \n    assert.equal(await welcome.getText(), 'O')\n    \n}catch(error){\n   \n    throw error\n}finally{\n    await driver.quit();\n}",
              "err": {},
              "uuid": "12f29b3c-da21-4572-a463-e09b5c3e7a5c",
              "parentUUID": "417e5f45-bf18-43f9-bea0-49a44504d006",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5749f47-59ef-45ce-8737-3b647cca0c3d",
            "12f29b3c-da21-4572-a463-e09b5c3e7a5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.5.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}